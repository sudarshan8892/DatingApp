@model List<DatingApp.DTOs.MemberDTo>

<link href="~/cardview/cardview.css" rel="stylesheet" />

<div class="container">


    <div class="row">
        <div class="d-flex justify-content-center">
            @foreach (var item in Model)
            {
                <div class="col-md-2 mb-3">
                    <div class="card">
                        <div class="card-img-wrapper">
                            <img src="@(item.PhotoUrl != null ? item.PhotoUrl : "/image/sample_user_icon.png")" alt="@item.KnownAs" class="card-img-top">

                            <ul class="list-inline member-icons animate text-center">
                                <li class="list-inline-item">
                                    <a href="@Url.Action("UserDetails", "Matches", new { username = item.UserName })">
                                        <i class="fa fa-user fa-2x"></i>
                                    </a>
                                </li>
                                <li class="list-inline-item">
                                    <a href="#">
                                        <i class="fa fa-heart fa-2x"></i>
                                    </a>
                                </li>
                                <li class="list-inline-item">
                                    <a href="#">
                                        <i class="fa fa-envelope fa-2x"></i>
                                    </a>
                                </li>
                            </ul>
                        </div>
                        <div class="card-body p-1">
                            <h5 class="card-title text-center mb-1">
                                <i class="fa fa-user me-2"></i>
                                @item.KnownAs
                            </h5>
                            <p class="card-text card-muted text-center">@item.Country</p>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</div>


@{
    var pagination = Model.FirstOrDefault()?.Pagination;
}


@if (pagination != null)
{
    <div class="d-flex justify-content-center">
        <nav aria-label="Page navigation example">
            <ul class="pagination">
                <li class="page-item @(pagination.CurrentPage == 1 ? "disabled" : "")">
                    <a class="page-link" href="@Url.Action("Index", new { pageNumber = pagination.CurrentPage - 1 })">Previous</a>
                </li>
                @for (var i = 1; i <= pagination.TotalPages; i++)
                {
                    <li class="page-item @(pagination.CurrentPage == i ? "active" : "")">
                        <a class="page-link" href="@Url.Action("Index", new { pageNumber = i })">@i</a>
                    </li>
                }
                <li class="page-item @(pagination.CurrentPage == pagination.TotalPages ? "disabled" : "")">
                    <a class="page-link" href="@Url.Action("Index", new { pageNumber = pagination.CurrentPage + 1 })">Next</a>
                </li>
            </ul>
        </nav>
    </div>
}